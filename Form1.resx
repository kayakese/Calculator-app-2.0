<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>